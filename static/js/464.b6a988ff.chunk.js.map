{"version":3,"file":"static/js/464.b6a988ff.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/Valodation.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/index.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Div = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 280px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: #ffffff;\r\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\r\n    border-radius: 40px;\r\n    width: 608px;\r\n    height: 473px;\r\n    padding: 60px 80px 60px 80px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    width: 618px;\r\n    height: 473px;\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-family: 'Manrope';\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  line-height: 33px;\r\n  letter-spacing: 0.04em;\r\n  color: #111111;\r\n  margin-bottom: 40px;\r\n  @media screen and (min-width: 768px) {\r\n    font-family: 'Manrope';\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 36px;\r\n    line-height: 49px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  min-width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  background: none;\r\n  height: 40px;\r\n  width: 280px;\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 40px;\r\n  margin-bottom: 13px;\r\n  padding: 5px 14px;\r\n  :focus,\r\n  :hover {\r\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 448px;\r\n    height: 52px;\r\n\r\n    background: #fdf7f2;\r\n    padding: 14px 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-bottom: 16px;\r\n    width: 458px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  outline: none;\r\n  background: none;\r\n  border: none;\r\n  box-shadow: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  font-family: 'Manrope';\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 25px;\r\n  ::placeholder {\r\n    font-family: 'Manrope';\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  font-family: 'Manrope';\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 27px;\r\n\r\n  width: 100%;\r\n  height: 44px;\r\n  border-radius: 20px;\r\n  background: #f59256;\r\n  border: none;\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 13px;\r\n  :active {\r\n    transform: translateY(2px);\r\n  }\r\n  :focus,\r\n  :hover {\r\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.25);\r\n    /* box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); */\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    height: 44px;\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    margin-top: 24px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-bottom: 16px;\r\n    height: 48px;\r\n    margin-top: 24px;\r\n  }\r\n`;\r\nexport const Span = styled.span`\r\n  font-family: 'Manrope';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  align-items: center;\r\n  text-align: center;\r\n  letter-spacing: 0.04em;\r\n  color: rgba(17, 17, 17, 0.6);\r\n  :focus,\r\n  :hover {\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n  }\r\n`;\r\nexport const LinkRegistration = styled(Link)`\r\n  font-family: 'Manrope';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  :focus,\r\n  :hover {\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n  }\r\n`;\r\n\r\nexport const ButtonGoogle = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #000000;\r\n  background-color: #ffffff;\r\n  gap: 10px;\r\n  cursor: pointer;\r\n\r\n  font-family: 'Manrope';\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 27px;\r\n\r\n  width: 100%;\r\n  height: 44px;\r\n  border-radius: 20px;\r\n  border: ${p => p.theme.borders.normal};\r\n  /* margin-top: 30px; */\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 10px;\r\n\r\n  :focus,\r\n  :hover {\r\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    height: 44px;\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    /* margin-top: 24px; */\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    height: 48px;\r\n    /* margin-top: 24px; */\r\n  }\r\n`;\r\n\r\nexport const GoogleIcon = styled.svg`\r\n  width: 22px;\r\n  height: 22px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n`;\r\n","import * as yup from 'yup';\r\n\r\nexport const schema = yup.object().shape({\r\n  email: yup.string().email().required('enter your E-mail, please'),\r\n  password: yup\r\n    .string()\r\n    .min(7, 'min Password 7 simvols')\r\n    .max(32, 'max Password 32 simvols')\r\n    .required('enter your Password, please'),\r\n});\r\n","import {\r\n  Div,\r\n  Title,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Span,\r\n  LinkRegistration,\r\n  ButtonGoogle,\r\n  GoogleIcon,\r\n} from './LoginForm.styled';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { schema } from './Valodation';\r\nimport { loginUser } from 'redux/auth/authOperation';\r\nimport { useEffect, useState } from 'react';\r\nimport { selectError, selectToken } from 'redux/auth/authSelectors';\r\nimport { useWindowSize } from '@react-hook/window-size';\r\nimport Confetti from 'react-confetti';\r\nimport { Validation } from 'utility/validationStyle';\r\nimport icons from '../../assets/images/icons.svg';\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const DbError = useSelector(selectError);\r\n  const [errorMassege, setErrorMassege] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [errorFixed, setErrorFixed] = useState(false);\r\n  const token = useSelector(selectToken);\r\n  const { width, height } = useWindowSize();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: schema,\r\n\r\n    onSubmit: values => {\r\n      if (errorFixed) {\r\n        return;\r\n      }\r\n      if (\r\n        emailError === formik.values.email ||\r\n        passwordError === formik.values.password\r\n      ) {\r\n      }\r\n      dispatch(loginUser(formik.values));\r\n      setErrorMassege('');\r\n      setEmailError('');\r\n      setPasswordError('');\r\n    },\r\n  });\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (DbError) {\r\n      setErrorMassege(DbError);\r\n      setEmailError(formik.values.email);\r\n      setPasswordError(formik.values.password);\r\n      setErrorFixed(true);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [DbError]);\r\n\r\n  useEffect(() => {\r\n    if (errorFixed) {\r\n      if (\r\n        emailError !== formik.values.email ||\r\n        passwordError !== formik.values.password\r\n      ) {\r\n        setErrorMassege('');\r\n        setEmailError('');\r\n        setPasswordError('');\r\n        setErrorFixed(false);\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [errorFixed, formik.values.email, formik.values.password]);\r\n\r\n  return (\r\n    <Div>\r\n      <Title>Login</Title>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <Label>\r\n          <Input\r\n            placeholder=\"E-mail\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.email}\r\n          ></Input>\r\n          {(formik.errors.email && formik.touched.email) || errorMassege ? (\r\n            <Validation>{formik.errors.email || errorMassege}</Validation>\r\n          ) : null}\r\n        </Label>\r\n        <Label>\r\n          <Input\r\n            placeholder=\"Password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.confirmPassword}\r\n          ></Input>\r\n          {formik.errors.password && formik.touched.password ? (\r\n            <Validation>{formik.errors.password}</Validation>\r\n          ) : null}\r\n        </Label>\r\n        <Button type=\"submit\">Login</Button>\r\n        <ButtonGoogle href=\"https://petly-bc26.cyclic.app/auth/google\">\r\n          <p>Login with </p>\r\n          <GoogleIcon>\r\n            <use href={icons + '#icon-google-logo'}></use>\r\n          </GoogleIcon>\r\n          <p>Google</p>\r\n        </ButtonGoogle>\r\n      </Form>\r\n      <Span>\r\n        Don't have an account?{' '}\r\n        <LinkRegistration type=\"button\" to=\"/register\">\r\n          Register\r\n        </LinkRegistration>\r\n      </Span>\r\n      {token ? (\r\n        <Confetti recycle={false} width={width} height={height} />\r\n      ) : null}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Div = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 42px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding-top: 204px;\r\n    padding-bottom: 299px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding-top: 80px;\r\n    padding-bottom: 147px;\r\n  }\r\n`;\r\n","import { LoginPage } from './LoginPage';\r\nexport default LoginPage;\r\n","import LoginForm from 'components/LoginForm/LoginForm';\r\nimport { GlobalStyleRegistration } from 'pages/RegistrationPage/RegistrationPage.styled';\r\nimport { Div } from './LoginPage.styled';\r\n\r\nexport const LoginPage = () => {\r\n  return (\r\n    <Div>\r\n      <GlobalStyleRegistration />\r\n      <LoginForm />\r\n    </Div>\r\n  );\r\n};\r\n"],"names":["Div","styled","Title","Form","Label","Input","Button","Span","LinkRegistration","Link","ButtonGoogle","p","theme","borders","normal","GoogleIcon","schema","yup","shape","email","required","password","min","max","dispatch","useDispatch","DbError","useSelector","selectError","useState","errorMassege","setErrorMassege","emailError","setEmailError","passwordError","setPasswordError","errorFixed","setErrorFixed","token","selectToken","useWindowSize","width","height","formik","useFormik","initialValues","validationSchema","onSubmit","values","loginUser","useEffect","handleSubmit","placeholder","id","name","type","onChange","handleChange","onBlur","handleBlur","value","errors","touched","confirmPassword","href","icons","to","recycle"],"sourceRoot":""}